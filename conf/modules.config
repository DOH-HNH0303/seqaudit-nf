/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
*/

process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FETCH_GENOME {
        publishDir = [
            path: { "${params.outdir}/genomes" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PBSIM3_ONT_MULTI {
        publishDir = [
            path: { "${params.outdir}/ont_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--pass-num 1'
    }

    withName: PBSIM3_PACBIO_MULTI {
        publishDir = [
            path: { "${params.outdir}/pacbio_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--pass-num 1'
    }

    withName: NANOSIM {
        publishDir = [
            path: { "${params.outdir}/ont_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ART_ILLUMINA_MULTI {
        publishDir = [
            path: { "${params.outdir}/illumina_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--noALN'
    }

    withName: QC_SUMMARY {
        publishDir = [
            path: { "${params.outdir}/qc_summary" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CREATE_MANIFEST {
        publishDir = [
            path: { "${params.outdir}/manifest" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
